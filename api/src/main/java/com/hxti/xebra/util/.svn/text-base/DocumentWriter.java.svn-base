/* ****************************************************************************
 * Copyright (C) 2007 Hx Technologies, Inc.
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * $Id: DocumentWriter.java,v 1.3 2007/11/16 16:05:42 kpearce Exp $
 * Last Revised By   : $Author: kpearce $
 * Last Checked In   : $Date: 2007/11/16 16:05:42 $
 * Last Version      : $Revision: 1.3 $
 *
 * Original Author   : Rafael Chargel
 * Origin            : Hx Technologies Inc.
 *
 *****************************************************************************/
package com.hxti.xebra.util;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.Writer;

import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Result;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

import org.w3c.dom.Document;
import org.xml.sax.InputSource;

/**
 * This class has only two methods to write out a <code>Document</code> object as an XML File to a supplied
 * <code>OutputStream</code> or <code>Writer</code>.
 * 
 * <p><strong>Copyright &#169; 2003-2005 - MadCow Gallery Space</strong></p>
 * 
 * <em><p>
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * </p>
 *
 * <p>
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * </p>
 * 
 * <p>
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 * </p>
 * <p>
 * <a href="http://www.fsf.org/licensing/licenses/lgpl.html" target="_blank">
 * Please read more about the GNU LGPL License from the FSF website
 * </a></p>
 * </em>
 * 
 * @author Rafael Chargel (rchargel@yahoo.com)
 */
public final class DocumentWriter
{
   
    /**
     * Writes the <code>Document</code> object to a supplied <code>OutputStream</code>.
     *
     * @param doc The <code>Document</code> object.
     * @param out The <code>OutputStream</code>.
     * @param mapper The <code>NamespaceMapper</code>.
     * 
     * @throws Exception thrown if the document cannot be processed.
     */
    public static final void writeToStream(Document doc, OutputStream out)
            throws Exception
    {
        TransformerFactory factory = TransformerFactory.newInstance();
        Transformer transformer = factory.newTransformer();
        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
        transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "2");
        
        Source source = new DOMSource(doc);
        Result result = new StreamResult(out);
        
        transformer.transform(source, result);
    }
    
    /**
     * Writes the <code>Document</code> object to a supplied <code>Writer</code>.
     *
     * @param doc The <code>Document</code> object.
     * @param out The <code>Writer</code>.
     * @param mapper The <code>NamespaceMapper</code>.
     * 
     * @throws Exception thrown if the document cannot be processed.
     */
    public static final void writeToWriter(Document doc, Writer out)
            throws Exception
    {
        TransformerFactory factory = TransformerFactory.newInstance();
        Transformer transformer = factory.newTransformer();
        
        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
        transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "2");
        
        Source source = new DOMSource(doc);
        Result result = new StreamResult(out);
        
        transformer.transform(source, result);
    }
}
